{"version":3,"sources":["golLib.js","table.js","gol.js","index.js"],"names":["getLiveNeighbors","length","width","position","object","neighbours","getAllNeighbors","liveNeighbors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","value","push","err","return","neighbours1","getNeighbors1","neighbours2","getNeighbors2","neighbours3","getNeighbors3","concat","neighbors","filterNeighbors","list","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","main","aliveCells","count","createEmptyObject","forEach","aliveList","allAlives","pos","condition1","includes","condition2","condition3","applyRules","withTdTag","text","id","onclick","react_default","a","createElement","onClick","bind","createTableRow","fnRef","row","createTable","table","currentId","className","GOL","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","state","selectAlive","start","stop","redirectToRules","reset","getNextGeneration","_this2","gameID","setInterval","clearInterval","_this$props","updatedCells","cell","document","getElementById","innerHTML","setState","window","location","href","reload","Component","ReactDOM","render","gol"],"mappings":"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","file":"static/js/main.7a650bbd.chunk.js","sourcesContent":["const applyRules = function(length, width, object, aliveList) {\n  let allAlives = [];\n  for (let pos = 1; pos <= length * width; pos++) {\n    let liveNeighbors = getLiveNeighbors(length, width, pos, object);\n    const condition1 = aliveList.includes(pos) && liveNeighbors == 2;\n    const condition2 = aliveList.includes(pos) && liveNeighbors == 3;\n    const condition3 = !aliveList.includes(pos) && liveNeighbors == 3;\n    if(condition1 || condition2 || condition3) allAlives.push(pos);\n  }\n  return allAlives;\n};\n\nconst getLiveNeighbors = function(length, width, position, object) {\n  let neighbours = getAllNeighbors(length, width, position);\n  let liveNeighbors = [];\n  for (let element of neighbours) {\n    if (object[element] == \"*\") liveNeighbors.push(element);\n  }\n  return liveNeighbors.length;\n};\n\nconst getAllNeighbors = function(length, width, position) {\n  const neighbours1 = getNeighbors1(length, width, position);\n  const neighbours2 = getNeighbors2(length, width, position);\n  const neighbours3 = getNeighbors3(length, width, position);\n  return neighbours1.concat(neighbours2).concat(neighbours3);\n};\n\nconst getNeighbors1 = function(length, width, position) {\n  const neighbors = [];\n  if ((position - 1) % length != 0) return neighbors;\n  neighbors.push(position + 1);\n  neighbors.push(position - length);\n  neighbors.push(position + length);\n  neighbors.push(position + length + 1);\n  neighbors.push(position - length + 1);\n  return filterNeighbors(length, width, neighbors);\n};\n\nconst getNeighbors2 = function(length, width, position) {\n  const neighbors = [];\n  if (position % length != 0) return neighbors;\n  neighbors.push(position - 1);\n  neighbors.push(position + length);\n  neighbors.push(position - length);\n  neighbors.push(position + length - 1);\n  neighbors.push(position - length - 1);\n  return filterNeighbors(length, width, neighbors);\n};\n\nconst getNeighbors3 = function(length, width, position) {\n  let neighbors = [];\n  if ((position - 1) % length == 0 || position % length == 0) return [];\n  neighbors.push(position - 1);\n  neighbors.push(position + 1);\n  neighbors.push(position - length);\n  neighbors.push(position + length);\n  neighbors.push(position - length - 1);\n  neighbors.push(position - length + 1);\n  neighbors.push(position + length - 1);\n  neighbors.push(position + length + 1);\n  return filterNeighbors(length, width, neighbors);\n};\n\nconst filterNeighbors = function(length, width, list) {\n  let result = [];\n  for (let element of list) {\n    if (element < 0 || element > length * width) continue;\n    result.push(element);\n  }\n  return result;\n};\n\nconst createEmptyObject = function(length, width) {\n  const result = {};\n  for (let count = 1; count <= length * width; count++) {\n    result[count] = \" \";\n  }\n  return result;\n};\n\nconst main = function(length, width, aliveCells) {\n  let object = createEmptyObject(length, width);\n  aliveCells.forEach(element => (object[element] = \"*\"));\n  return applyRules(length, width, object, aliveCells);\n};\n\nexport default main;","import React from \"react\";\nlet currentId = 1;\n\nconst withTdTag = function(text, id, onclick) {\n  return <td id={id} onClick={onclick.bind(null,id)}>{text}</td>;\n};\n\nconst createTableRow = function(id, length, text, fnRef) {\n  let row = [];\n  for (let count = 0; count < length; count++) {\n    row.push (withTdTag(text, id++, fnRef));\n  }\n  return <tr>{row}</tr>;\n};\n\nconst createTable = function(length, width, fnRef) {\n  const table = [];\n  let currentId = 1;\n  for (let count = 0; count < width; count++) {\n    table.push (createTableRow(currentId, length, \" \", fnRef));\n    currentId = currentId + length;\n  }\n  return <table id={\"table\"} className={\"main-table\"}>{table}</table>;\n};\n\n\nexport default createTable;","import React, { Component } from \"react\";\nimport \"./main.css\";\nimport main from \"./golLib\"\nimport createTable from \"./table\";\n\nclass GOL extends Component {\n  constructor(props) {\n    super(props);\n    this.createTable = createTable.bind(this);\n    this.main = main.bind(this);\n    this.state = {aliveCells: []};\n    this.selectAlive = this.selectAlive.bind(this);\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.redirectToRules = this.redirectToRules.bind(this);\n    this.reset = this.reset.bind(this);\n    this.getNextGeneration = this.getNextGeneration.bind(this);\n\n  }\n\n  start(){\n    this.gameID = setInterval(() => this.getNextGeneration(), 500);\n  }\n\n  stop(){\n    clearInterval(this.gameID); \n  }\n\n  getNextGeneration() {\n    const {length, width} = this.props;\n    const updatedCells = this.main(length, width, this.state.aliveCells);\n    this.state.aliveCells.forEach(cell => document.getElementById(cell).innerHTML = \" \");\n    updatedCells.forEach(cell => document.getElementById(cell).innerHTML = \"&#128512\");\n    this.setState({ aliveCells: updatedCells});\n  }\n\n  selectAlive(id){\n    !this.state.aliveCells.includes(id) && this.state.aliveCells.push(id);\n    document.getElementById(id).innerHTML = \"&#128512\";\n  }\n\n  redirectToRules(){\n    window.location.href = \"https://bit.ly/1yDqoU0\";\n  }\n\n  reset(){\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"heading\"> GAME OF LIFE </div>\n        <div className=\"page-view\">\n          {this.createTable(this.props.length, this.props.width, this.selectAlive)}\n          <div className=\"options \">\n            <button onClick={this.start}>S t a r t</button>\n            <button onClick={this.stop}>P a u s e</button>\n            <button onClick={this.reset}>R e s e t</button>\n            <button onClick={this.redirectToRules}>R u l e s</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GOL;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GOL from './gol';\n\nReactDOM.render(<GOL length={10} width={10} />, document.getElementById('root'));\n"],"sourceRoot":""}